from math import log10

turbo_pallete_rgbs = """48 18 59
49 21 66
50 24 74
52 27 81
53 30 88
54 33 95
55 35 101
56 38 108
57 41 114
58 44 121
59 47 127
60 50 133
60 53 139
61 55 145
62 58 150
63 61 156
64 64 161
64 67 166
65 69 171
65 72 176
66 75 181
67 78 186
67 80 190
67 83 194
68 86 199
68 88 203
69 91 206
69 94 210
69 96 214
69 99 217
70 102 221
70 104 224
70 107 227
70 109 230
70 112 232
70 115 235
70 117 237
70 120 240
70 122 242
70 125 244
70 127 246
70 130 248
69 132 249
69 135 251
69 137 252
68 140 253
67 142 253
66 145 254
65 147 254
64 150 254
63 152 254
62 155 254
60 157 253
59 160 252
57 162 252
56 165 251
54 168 249
52 170 248
51 172 246
49 175 245
47 177 243
45 180 241
43 182 239
42 185 237
40 187 235
38 189 233
37 192 230
35 194 228
33 196 225
32 198 223
30 201 220
29 203 218
28 205 215
27 207 212
26 209 210
25 211 207
24 213 204
24 215 202
23 217 199
23 218 196
23 220 194
23 222 191
24 224 189
24 225 186
25 227 184
26 228 182
27 229 180
29 231 177
30 232 175
32 233 172
34 235 169
36 236 166
39 237 163
41 238 160
44 239 157
47 240 154
50 241 151
53 243 148
56 244 145
59 244 141
63 245 138
66 246 135
70 247 131
74 248 128
77 249 124
81 249 121
85 250 118
89 251 114
93 251 111
97 252 108
101 252 104
105 253 101
109 253 98
113 253 95
116 254 92
120 254 89
124 254 86
128 254 83
132 254 80
135 254 77
139 254 75
142 254 72
146 254 70
149 254 68
152 254 66
155 253 64
158 253 62
161 252 61
164 252 59
166 251 58
169 251 57
172 250 55
174 249 55
177 248 54
179 248 53
182 247 53
185 245 52
187 244 52
190 243 52
192 242 51
195 241 51
197 239 51
200 238 51
202 237 51
205 235 52
207 234 52
209 232 52
212 231 53
214 229 53
216 227 53
218 226 54
221 224 54
223 222 54
225 220 55
227 218 55
229 216 56
231 215 56
232 213 56
234 211 57
236 209 57
237 207 57
239 205 57
240 203 58
242 200 58
243 198 58
244 196 58
246 194 58
247 192 57
248 190 57
249 188 57
249 186 56
250 183 55
251 181 55
251 179 54
252 176 53
252 174 52
253 171 51
253 169 50
253 166 49
253 163 48
254 161 47
254 158 46
254 155 45
254 152 44
253 149 43
253 146 41
253 143 40
253 140 39
252 137 38
252 134 36
251 131 35
251 128 34
250 125 32
250 122 31
249 119 30
248 116 28
247 113 27
247 110 26
246 107 24
245 104 23
244 101 22
243 99 21
242 96 20
241 93 19
239 90 17
238 88 16
237 85 15
236 82 14
234 80 13
233 77 13
232 75 12
230 73 11
229 70 10
227 68 10
226 66 9
224 64 8
222 62 8
221 60 7
219 58 7
217 56 6
215 54 6
214 52 5
212 50 5
210 48 5
208 47 4
206 45 4
203 43 3
201 41 3
199 40 3
197 38 2
195 36 2
192 35 2
190 33 2
187 31 1
185 30 1
182 28 1
180 27 1
177 25 1
174 24 1
172 22 1
169 21 1
166 20 1
163 18 1
160 17 1
157 16 1
154 14 1
151 13 1
148 12 1
145 11 1
142 10 1
139 9 1
135 8 1
132 7 1
129 6 2
125 5 2
122 4 2"""

turbo_palette_values="""0.01
0.010351522
0.010715401
0.011092071
0.011481982
0.011885599
0.012303404
0.012735896
0.013183591
0.013647023
0.014126746
0.014623333
0.015137375
0.015669488
0.016220305
0.016790484
0.017380707
0.017991677
0.018624125
0.019278804
0.019956496
0.020658011
0.021384186
0.022135888
0.022914013
0.023719491
0.024553284
0.025416386
0.026309829
0.027234677
0.028192036
0.029183049
0.030208898
0.031270807
0.032370045
0.033507924
0.034685802
0.035905084
0.037167228
0.038473738
0.039826175
0.041226153
0.042675344
0.044175476
0.045728342
0.047335795
0.048999752
0.050722202
0.0525052
0.054350874
0.056261427
0.058239141
0.060286376
0.062405575
0.064599269
0.066870077
0.069220708
0.071653969
0.074172764
0.076780101
0.079479092
0.082272958
0.085165034
0.088158774
0.091257749
0.094465661
0.097786338
0.101223745
0.104781983
0.108465302
0.112278097
0.116224921
0.120310484
0.124539664
0.128917508
0.133449244
0.13814028
0.142996217
0.14802285
0.153226181
0.158612421
0.164187998
0.16995957
0.175934025
0.182118495
0.188520363
0.195147271
0.202007129
0.209108127
0.216458741
0.224067744
0.231944221
0.240097574
0.248537535
0.257274179
0.266317936
0.275679601
0.285370349
0.295401748
0.305785774
0.31653482
0.32766172
0.339179754
0.351102673
0.363444709
0.376220595
0.389445581
0.403135455
0.417306559
0.431975808
0.447160713
0.462879402
0.479150637
0.495993843
0.513429124
0.531477294
0.550159897
0.569499235
0.589518393
0.610241269
0.6316926
0.653897993
0.676883955
0.700677924
0.725308303
0.750804495
0.777196935
0.804517127
0.832797684
0.862072366
0.892376117
0.923745112
0.956216797
0.989829934
1.024624647
1.06064247
1.0979264
1.136520943
1.176472169
1.21782777
1.260637111
1.304951295
1.350823221
1.398307646
1.447461255
1.498342721
1.551012783
1.605534315
1.661972399
1.720394407
1.780870078
1.843471602
1.908273708
1.975353752
2.044791808
2.116670765
2.191076426
2.268097612
2.347826262
2.430357551
2.515789997
2.604225583
2.695769875
2.790532152
2.888625533
2.990167113
3.095278104
3.204083979
3.316714621
3.43330448
3.55399273
3.67892344
3.80824574
3.942114005
4.080688037
4.224133252
4.372620883
4.526328184
4.685438636
4.850142173
5.020635404
5.197121849
5.379812183
5.568924487
5.764684506
5.967325924
6.177090636
6.394229041
6.619000342
6.851672852
7.092524316
7.341842241
7.599924243
7.867078399
8.143623614
8.429890006
8.726219295
9.032965214
9.350493931
9.679184485
10.01942924
10.37163435
10.73622025
11.11362215
11.50429056
11.90869184
12.32730871
12.76064089
13.20920566
13.67353847
14.1541936
14.65174483
15.16678609
15.69993218
16.25181954
16.82310696
17.4144764
18.02663378
18.66030985
19.31626104
19.99527036
20.69814837
21.42573409
22.17889605
22.95853333
23.76557658
24.60098919
25.46576841
26.36094652
27.28759213
28.24681138
29.23974931
30.2675912
31.33156402
32.43293783
33.57302737
34.75319357
35.97484524
37.23944066
38.54848941
39.90355412
41.30625235
42.75825853
44.26130594
45.81718879
47.42776437
49.09495525
50.82075157
52.60721345
54.45647343
56.37073898
58.3522952
60.40350751
62.52682447
64.72478072
67"""

def get_colour_ramp():
    colours = turbo_pallete_rgbs.split("\n")
    colours = map(lambda x: x.split(" "),colours)
    colours = map(lambda x: "#%02X%02X%02X"%(int(x[0]),int(x[1]),int(x[2])),colours)
    values = turbo_palette_values.split("\n")
    values = map(lambda x: float(x),values)
    pairs = list(zip(colours,values))
    ramp = []
    for (colour,value) in pairs:
        ramp.append({"value":log10(value),"color":colour})
    ramp[0]["alpha"] = 1.0
    return ramp

style = {
    "name": "chlor_a_style",
    "title": "Chlorophyl-A",
    "abstract": "Chlorophyl-A",
    "index_function": {
        "function": "layers.styles.chlor_a_style.logfn"
    },
    "needed_bands": ["chlor_a"],
    "color_ramp": get_colour_ramp(),
    "include_in_feature_info": True,
    "legend": {
        "show_legend": True,
        "width": 4,    # 400 pixels at default dpi
        "height": 2,
        "title": "milligram m-3"
    }
}


import numpy as np
import xarray as xr

def logfn(ds):
    da = ds["chlor_a"]
    return xr.apply_ufunc(np.vectorize(log10),da)

